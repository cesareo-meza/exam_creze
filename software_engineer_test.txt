Basic Rules
===========
1. Review the questions in this file. Reply back via email with an estimated
   delivery date.
2. Answer each of the questions below.
3. Add your answer to each question to this file, in-line.
4. Send the final file back for review.
5. Bonus points if you add this initial file to your public git repo and share
   that repo with us so we can see how your answers progressed.
6. You may use external sources to help answer the questions (i.e. Google, etc),
   but you should always cite your sources in your comments. Learning from
   others is good. Plagiarism is bad.


Developer Test
==============

1.  What editor will you use to edit this file, and why?
I will use notepad++ because it has some features to find words, move around file, 
highlight words and show text with many code styles
2.  Some of the questions will ask for a solution in the language of
    your choice.  What language(s) will you choose, and why?
I will choose Java, JavaScript, C# or PL/SQL, because I'm used to those languages
and I feel confident using them
3.  Explain the difference between testing and debugging.
I think testing is a process that looks for the quality of the program using 
predefined scripts and checking that results are as expected in every situation,
Regularly testing involves just inputs and outputs, and it does not consider source code
Debugging is used to find causes of wrong outputs of the program execution, mainly by using source code
4.  Consider a user querying a search engine.  Describe, in as much
    detail as you like, what happens between the user clicking the
    "submit" button and the display of the results.
The submit button triggers client code in the user navigator, 
user navigator prepares the request body and calls the Web Service that perform the desired query,
next, Web Service receives message, extracts searching data and sends it to the database server,
database server looks for data and send results back to the Web Service,
now Web Service use data to create results object and send it back to user navigator,
user navigator parses and format data to show results to the user,
	
The two tables below describe relationships between employees,
managers, and departments (the columns employee.mgr_id and
department.head both refer to employee.id).  Use these definitions to
answer questions 5-10.  If you need to use any nonstandard functions or
syntax, be sure to name the DBMS that implements them.

employee                              department
----------------------------------    -----------------------
 id |        name        | mgr_id           name      | head
----+--------------------+--------    ----------------+------
  1 | Jonathan Archer    |     11      Operations     |   11
  2 | Christopher Pike   |     12      Marketing      |   12
  3 | James Kirk         |     13      IT             |   13
  4 | Jean-Luc Picard    |     14      HR             |   14
  5 | Kathryn Janeway    |     15      Sales          |   15
  6 | Ralph Wiggum       |     11
  7 | Troy McClure       |     12
  8 | Waylon Smithers    |     17
  9 | Edna Krabappel     |     16
 10 | Ned Flanders       |     15
 11 | Buffy Summers      |
 12 | Xander Harris      |
 13 | Willow Rosenberg   |
 14 | Rupert Giles       |
 15 | Oz Selbie          |
 16 | Dade Murphy        |     11
 17 | Kate Libby         |     13
 18 | Paul Cook          |     17
 19 | Emmanuel Goldstein |     16
 20 | Winston Smith      |     15
 21 | Thomas Anderson    |     15
 22 | Agent Smith        |     14
 23 | Malcolm Reynolds   |     14
 24 | River Tam          |     18
 25 | Jason Nesmith      |     18

5.  Write an SQL query to list the full name of every employee,
    alphabetized by first name.
SELECT name FROM EMPLOYEE EMP 
ORDER BY EMP.name
6.  Write an SQL query to list the full name of every employee,
    alphabetized by last name.
SELECT substr(name, instr(name, ' '), length(name) ) as last_name, name  
FROM EMPLOYEE EMP ORDER BY last_name
I used Oracle functions to get substring, look for space and get length of strings
7.  Write an SQL query to list the full name of every employee along
    with the full name of his/her manager.
SELECT EMP.name, MGR.name FROM employee EMP 
LEFT JOIN employee MGR ON EMP.mgr_id = MGR.id
8.  Write an SQL query to list the full name of every employee in the
    Sales department.
SELECT name FROM employee EMP 
INNER JOIN department DEP 
on EMP.mgr_id = DEP.head 
OR EMP.id = DEP.head 
WHERE DEP.name = 'Sales'
9.  Write an SQL query to list the full name of every employee along
    with name of his/her department.
SELECT EMP.name, DEP.name FROM employee EMP 
LEFT JOIN department DEP 
ON EMP.mgr_id = DEP.head 
OR EMP.id = DEP.head
10. Is there a better design for a database that supports the queries
    described in questions 5-9?  If so, describe it.  If not, why not?
It is better to avoid operations in select clauses, I would create a column to hold employee last name,
Department entity should have its own id, and it would be necessary to create a new table to relate 
employees to their department, this would help to really have a department entity and not just an extra field
for an employee
11. Write a function in the language of your choice that implements
    quicksort on an array of integers.
//I red the sort process definition in wikipedia
	
var data = [8,5,6,2,9,4,5,8,4,0];
var result = quickorder(data);
console.log('result: ' + result);

function quickorder(input_array)
{
  var pivot;
  var array1=[];
  var array2=[];
  var result=[];

  //select pivot
  if(input_array.length > 1)
  {
  	pivot = input_array[0];
  }
  else
  {
  	return input_array;
  }
  
  //divide
  for(i=1; i<input_array.length; i++)
  {
  	if(input_array[i] > pivot)
    {
    	array2.push(input_array[i]);
    }else
    {
    	array1.push(input_array[i]);
    }
  }
  //order new arrays

  result.push(quickorder(array1));
  result.push(pivot);
  result.push(quickorder(array2));
  
  return result;
}
12. Write a function in the language of your choice that performs
    binary search on a sorted array of integers.
13. Write a function in the language of your choice performs the query
    you wrote for question 7, and outputs the results as an HTML table.
14. Write a program in the language of your choice that takes a filename
    and a number N as arguments and retrieves and outputs the Nth line
    from the file.
15. Write the function from question 12 in a different language.
16. Write the program from question 14 in a different language (it can
    be the same language you used for #15, but it doesn't have to be).
